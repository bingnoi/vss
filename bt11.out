nohup: ignoring input
2023-07-14 10:30:20,421 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0,1,2,3: NVIDIA GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Build cuda_11.7.r11.7/compiler.31442593_0
GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.5.2
MMCV: 1.2.0
MMCV Compiler: GCC 9.4
MMCV CUDA Compiler: 11.7
MMSegmentation: 0.11.0+4bb04c6
------------------------------------------------------------

2023-07-14 10:30:20,422 - mmseg - INFO - Distributed training: True
2023-07-14 10:30:20,567 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
find_unused_parameters = True
model = dict(
    type='EncoderDecoder_clips',
    pretrained='/home/lixinhao/original/mit_b2.pth',
    backbone=dict(type='mit_b2', style='pytorch'),
    decode_head=dict(
        type='SegFormerHead_clips',
        in_channels=[64, 128, 320, 512],
        in_index=[0, 1, 2, 3],
        feature_strides=[4, 8, 16, 32],
        channels=128,
        dropout_ratio=0.1,
        num_classes=124,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        decoder_params=dict(embed_dim=256),
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
        num_infer=3,
        num_clips=4,
        hypercorre=True,
        backbone='b2'),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'VSPWDataset2'
data_root = 'data/vspw/VSPW_480p'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (480, 480)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=True),
    dict(
        type='Resize',
        img_scale=(853, 480),
        ratio_range=(0.5, 2.0),
        process_clips=True),
    dict(type='RandomCrop_clips', crop_size=(480, 480), cat_max_ratio=0.75),
    dict(type='RandomFlip_clips', prob=0.5),
    dict(type='PhotoMetricDistortion_clips'),
    dict(
        type='Normalize_clips',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad_clips', size=(480, 480), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle_clips'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(853, 480),
        flip=False,
        transforms=[
            dict(type='AlignedResize_clips', keep_ratio=True, size_divisor=32),
            dict(type='RandomFlip_clips'),
            dict(
                type='Normalize_clips',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor_clips', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=4,
    train=dict(
        type='RepeatDataset',
        times=50,
        dataset=dict(
            type='VSPWDataset2',
            data_root='data/vspw/VSPW_480p',
            img_dir='images/training',
            ann_dir='annotations/training',
            split='train',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', reduce_zero_label=True),
                dict(
                    type='Resize',
                    img_scale=(853, 480),
                    ratio_range=(0.5, 2.0),
                    process_clips=True),
                dict(
                    type='RandomCrop_clips',
                    crop_size=(480, 480),
                    cat_max_ratio=0.75),
                dict(type='RandomFlip_clips', prob=0.5),
                dict(type='PhotoMetricDistortion_clips'),
                dict(
                    type='Normalize_clips',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(
                    type='Pad_clips',
                    size=(480, 480),
                    pad_val=0,
                    seg_pad_val=255),
                dict(type='DefaultFormatBundle_clips'),
                dict(type='Collect', keys=['img', 'gt_semantic_seg'])
            ],
            dilation=[-9, -6, -3])),
    val=dict(
        type='VSPWDataset2',
        data_root='data/vspw/VSPW_480p',
        img_dir='images/validation',
        ann_dir='annotations/validation',
        split='val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(853, 480),
                flip=False,
                transforms=[
                    dict(
                        type='AlignedResize_clips',
                        keep_ratio=True,
                        size_divisor=32),
                    dict(type='RandomFlip_clips'),
                    dict(
                        type='Normalize_clips',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor_clips', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        dilation=[-9, -6, -3]),
    test=dict(
        type='VSPWDataset2',
        data_root='data/vspw/VSPW_480p',
        img_dir='images/validation',
        ann_dir='annotations/validation',
        split='val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(853, 480),
                flip=False,
                transforms=[
                    dict(
                        type='AlignedResize_clips',
                        keep_ratio=True,
                        size_divisor=32),
                    dict(type='RandomFlip_clips'),
                    dict(
                        type='Normalize_clips',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor_clips', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        dilation=[-9, -6, -3]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(
    type='AdamW',
    lr=3e-05,
    betas=(0.9, 0.999),
    weight_decay=0.01,
    paramwise_cfg=dict(
        custom_keys=dict(
            pos_block=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0),
            head=dict(lr_mult=10.0))))
optimizer_config = dict()
lr_config = dict(
    policy='poly',
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06,
    power=1.0,
    min_lr=0.0,
    by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=160000)
checkpoint_config = dict(by_epoch=False, interval=4000)
evaluation = dict(interval=160000, metric='mIoU')
work_dir = 'model_path/vspw2/model_save/b11'
gpu_ids = range(0, 1)

2023-07-14 10:30:21,418 - mmseg - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: head.weight, head.bias

2023-07-14 10:30:21,419 - mmseg - INFO - EncoderDecoder_clips(
  (backbone): mit_b2(
    (patch_embed1): OverlapPatchEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    )
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(64, 64, kernel_size=(8, 8), stride=(8, 8))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
          )
          (act): GELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(64, 64, kernel_size=(8, 8), stride=(8, 8))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
          )
          (act): GELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=64, out_features=64, bias=True)
          (kv): Linear(in_features=64, out_features=128, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(64, 64, kernel_size=(8, 8), stride=(8, 8))
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
          )
          (act): GELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-06, elementwise_affine=True)
    (block2): ModuleList(
      (0): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(128, 128, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(128, 128, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(128, 128, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=128, out_features=128, bias=True)
          (kv): Linear(in_features=128, out_features=256, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=128, out_features=128, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(128, 128, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=128, out_features=512, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Linear(in_features=512, out_features=128, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-06, elementwise_affine=True)
    (block3): ModuleList(
      (0): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(320, 320, kernel_size=(2, 2), stride=(2, 2))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(320, 320, kernel_size=(2, 2), stride=(2, 2))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(320, 320, kernel_size=(2, 2), stride=(2, 2))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(320, 320, kernel_size=(2, 2), stride=(2, 2))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(320, 320, kernel_size=(2, 2), stride=(2, 2))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=320, out_features=320, bias=True)
          (kv): Linear(in_features=320, out_features=640, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=320, out_features=320, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
          (sr): Conv2d(320, 320, kernel_size=(2, 2), stride=(2, 2))
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=320, out_features=1280, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Linear(in_features=1280, out_features=320, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-06, elementwise_affine=True)
    (block4): ModuleList(
      (0): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (q): Linear(in_features=512, out_features=512, bias=True)
          (kv): Linear(in_features=512, out_features=1024, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=512, out_features=512, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=512, out_features=2048, bias=True)
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Linear(in_features=2048, out_features=512, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-06, elementwise_affine=True)
  )
  (decode_head): SegFormerHead_clips(
    input_transform=multiple_select, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss()
    (conv_seg): Conv2d(128, 124, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (net): SegFormerHead_clipsNet(
      input_transform=multiple_select, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss()
      (conv_seg): Conv2d(128, 124, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (linear_c4): MLP(
        (proj): Linear(in_features=512, out_features=256, bias=True)
      )
      (linear_c3): MLP(
        (proj): Linear(in_features=320, out_features=256, bias=True)
      )
      (linear_c2): MLP(
        (proj): Linear(in_features=128, out_features=256, bias=True)
      )
      (linear_c1): MLP(
        (proj): Linear(in_features=64, out_features=256, bias=True)
      )
      (pooling_mhsa_c1): pooling_mhsa(
        (pools): ModuleList()
        (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (d_convs): ModuleList(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
        )
      )
      (pooling_mhsa_c2): pooling_mhsa(
        (pools): ModuleList()
        (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (d_convs): ModuleList(
          (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
        )
      )
      (pooling_mhsa_c3): pooling_mhsa(
        (pools): ModuleList()
        (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
        (d_convs): ModuleList(
          (0): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          (1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          (2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          (3): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
        )
      )
      (pooling_mhsa_c4): pooling_mhsa(
        (pools): ModuleList()
        (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (d_convs): ModuleList(
          (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
        )
      )
      (pooling_linear): Linear(in_features=1024, out_features=256, bias=True)
      (linear_fuse): ConvModule(
        (conv): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (linear_pred): Conv2d(256, 124, kernel_size=(1, 1), stride=(1, 1))
      (linear1): Linear(in_features=512, out_features=512, bias=True)
      (linear2): Linear(in_features=512, out_features=512, bias=True)
      (deco1): small_decoder2(
        (smalldecoder): Sequential(
          (0): Dropout2d(p=0.1, inplace=False)
          (1): Conv2d(256, 124, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (deco2): small_decoder2(
        (smalldecoder): Sequential(
          (0): Dropout2d(p=0.1, inplace=False)
          (1): Conv2d(512, 124, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (deco3): small_decoder2(
        (smalldecoder): Sequential(
          (0): Dropout2d(p=0.1, inplace=False)
          (1): Conv2d(512, 124, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (deco4): small_decoder2(
        (smalldecoder): Sequential(
          (0): Dropout2d(p=0.1, inplace=False)
          (1): Conv2d(512, 124, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (hypercorre_module): hypercorre_topk2(
        (q1): Linear(in_features=64, out_features=64, bias=True)
        (q2): Linear(in_features=128, out_features=128, bias=True)
        (q3): Linear(in_features=320, out_features=320, bias=True)
        (q4): Linear(in_features=512, out_features=512, bias=True)
        (k1): Linear(in_features=64, out_features=64, bias=True)
        (k2): Linear(in_features=128, out_features=128, bias=True)
        (k3): Linear(in_features=320, out_features=320, bias=True)
        (k4): Linear(in_features=512, out_features=512, bias=True)
        (i4): Linear(in_features=64, out_features=64, bias=True)
        (i3): Linear(in_features=128, out_features=128, bias=True)
        (i2): Linear(in_features=320, out_features=320, bias=True)
        (i1): Linear(in_features=512, out_features=512, bias=True)
        (iv4): Linear(in_features=64, out_features=64, bias=True)
        (iv3): Linear(in_features=128, out_features=128, bias=True)
        (iv2): Linear(in_features=320, out_features=320, bias=True)
        (iv1): Linear(in_features=512, out_features=512, bias=True)
        (pooling_mhsa_fk4): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          )
        )
        (pooling_mhsa_fk3): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          )
        )
        (pooling_mhsa_fk2): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (3): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          )
        )
        (pooling_mhsa_fk1): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
        )
        (pooling_mhsa_sk4): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          )
        )
        (pooling_mhsa_sk3): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          )
        )
        (pooling_mhsa_sk2): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (3): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          )
        )
        (pooling_mhsa_sk1): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
        )
        (pooling_mhsa_f4): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
            (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          )
        )
        (pooling_mhsa_f3): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
          )
        )
        (pooling_mhsa_f2): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (3): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          )
        )
        (pooling_mhsa_f1): pooling_mhsa(
          (pools): ModuleList()
          (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (d_convs): ModuleList(
            (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
            (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
        )
        (f4): Linear(in_features=64, out_features=64, bias=True)
        (f3): Linear(in_features=128, out_features=128, bias=True)
        (f2): Linear(in_features=320, out_features=320, bias=True)
        (f1): Linear(in_features=512, out_features=512, bias=True)
        (v4): Linear(in_features=64, out_features=64, bias=True)
        (v3): Linear(in_features=128, out_features=128, bias=True)
        (v2): Linear(in_features=320, out_features=320, bias=True)
        (v1): Linear(in_features=512, out_features=512, bias=True)
        (fs4): Linear(in_features=64, out_features=64, bias=True)
        (fs3): Linear(in_features=128, out_features=128, bias=True)
        (fs2): Linear(in_features=320, out_features=320, bias=True)
        (fs1): Linear(in_features=512, out_features=512, bias=True)
        (vs4): Linear(in_features=64, out_features=64, bias=True)
        (vs3): Linear(in_features=128, out_features=128, bias=True)
        (vs2): Linear(in_features=320, out_features=320, bias=True)
        (vs1): Linear(in_features=512, out_features=512, bias=True)
        (pk4): Linear(in_features=64, out_features=64, bias=True)
        (pk3): Linear(in_features=128, out_features=128, bias=True)
        (pk2): Linear(in_features=320, out_features=320, bias=True)
        (pk1): Linear(in_features=512, out_features=512, bias=True)
        (f4p): Linear(in_features=64, out_features=64, bias=True)
        (f3p): Linear(in_features=128, out_features=128, bias=True)
        (f2p): Linear(in_features=320, out_features=320, bias=True)
        (f1p): Linear(in_features=512, out_features=512, bias=True)
        (pooling_proj_linear): Linear(in_features=1024, out_features=256, bias=True)
        (pooling_proj_linear_1): Linear(in_features=1024, out_features=256, bias=True)
        (pooling_proj_linear_2): Linear(in_features=1024, out_features=256, bias=True)
        (pooling_proj_linear_3): Linear(in_features=1024, out_features=256, bias=True)
        (hpn): HPNLearner_topk2(
          (encoder_layer4): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer3): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer2): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer4to3): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer3to2): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
        )
        (hpn1): HPNLearner_topk2(
          (encoder_layer4): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer3): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer2): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer4to3): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer3to2): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
        )
        (hpn2): HPNLearner_topk2(
          (encoder_layer4): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer3): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer2): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer4to3): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
          (encoder_layer3to2): Sequential(
            (0): CenterPivotConv4d_half(
              (conv2): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): GroupNorm(1, 1, eps=1e-05, affine=True)
            (2): ReLU(inplace=True)
          )
        )
        (linear1): Linear(in_features=512, out_features=512, bias=True)
        (linear2): Linear(in_features=512, out_features=512, bias=True)
      )
      (sr2): Conv2d(128, 128, kernel_size=(4, 4), stride=(4, 4))
      (sr3): Conv2d(320, 320, kernel_size=(2, 2), stride=(2, 2))
      (sr1_feat): Conv2d(256, 256, kernel_size=(4, 4), stride=(4, 4))
    )
    (memory): FeatureMemory(
      (linear1): Linear(in_features=512, out_features=512, bias=True)
      (linear2): Linear(in_features=512, out_features=512, bias=True)
      (linear3): Linear(in_features=512, out_features=512, bias=True)
      (initlinear): Linear(in_features=512, out_features=512, bias=True)
      (initlinear2): Linear(in_features=512, out_features=512, bias=True)
      (initlinear3): Linear(in_features=512, out_features=512, bias=True)
      (down_linear): Linear(in_features=1536, out_features=512, bias=True)
    )
  )
)
2023-07-14 10:30:21,428 - mmseg - INFO - 
Number of parameters (in millions): 35.488
2023-07-14 10:30:21,430 - mmseg - INFO - 
Number of parameters (in millions): 24.196
2023-07-14 10:30:21,432 - mmseg - INFO - Number of parameters (in millions) for decoder: 11.292

flip video:  True
flip video:  True
flip video:  True
flip video:  True
flip video:  True
flip video:  True
flip video:  True
flip video:  True
2023-07-14 10:30:26,338 - mmseg - INFO - Start running, host: lixinhao@user, work_dir: /home/lixinhao/vss/model_path/vspw2/model_save/b11
2023-07-14 10:30:26,339 - mmseg - INFO - workflow: [('train', 1)], max: 160000 iters
[W reducer.cpp:346] Warning: Grad strides do not match bucket view strides. This may indicate grad was not created according to the gradient layout contract, or that the param's strides changed since DDP was constructed.  This is not an error, but may impair performance.
grad.sizes() = [2048, 1, 3, 3], strides() = [9, 1, 3, 1]
bucket_view.sizes() = [2048, 1, 3, 3], strides() = [9, 9, 3, 1] (function operator())
[W reducer.cpp:346] Warning: Grad strides do not match bucket view strides. This may indicate grad was not created according to the gradient layout contract, or that the param's strides changed since DDP was constructed.  This is not an error, but may impair performance.
grad.sizes() = [2048, 1, 3, 3], strides() = [9, 1, 3, 1]
bucket_view.sizes() = [2048, 1, 3, 3], strides() = [9, 9, 3, 1] (function operator())
[W reducer.cpp:346] Warning: Grad strides do not match bucket view strides. This may indicate grad was not created according to the gradient layout contract, or that the param's strides changed since DDP was constructed.  This is not an error, but may impair performance.
grad.sizes() = [2048, 1, 3, 3], strides() = [9, 1, 3, 1]
bucket_view.sizes() = [2048, 1, 3, 3], strides() = [9, 9, 3, 1] (function operator())
[W reducer.cpp:346] Warning: Grad strides do not match bucket view strides. This may indicate grad was not created according to the gradient layout contract, or that the param's strides changed since DDP was constructed.  This is not an error, but may impair performance.
grad.sizes() = [2048, 1, 3, 3], strides() = [9, 1, 3, 1]
bucket_view.sizes() = [2048, 1, 3, 3], strides() = [9, 9, 3, 1] (function operator())
2023-07-14 10:31:17,013 - mmseg - INFO - Iter [50/160000]	lr: 9.797e-07, eta: 1 day, 11:56:58, time: 0.809, data_time: 0.024, memory: 12436, decode.loss_seg: 14.8450, decode.acc_seg: 0.5859, loss: 14.8450
2023-07-14 10:31:54,303 - mmseg - INFO - Iter [100/160000]	lr: 1.979e-06, eta: 1 day, 10:31:55, time: 0.746, data_time: 0.010, memory: 12436, decode.loss_seg: 11.6624, decode.acc_seg: 0.7208, loss: 11.6624
2023-07-14 10:32:31,725 - mmseg - INFO - Iter [150/160000]	lr: 2.977e-06, eta: 1 day, 10:05:17, time: 0.748, data_time: 0.010, memory: 12436, decode.loss_seg: 10.0488, decode.acc_seg: 1.2630, loss: 10.0488
2023-07-14 10:33:09,152 - mmseg - INFO - Iter [200/160000]	lr: 3.975e-06, eta: 1 day, 9:52:00, time: 0.749, data_time: 0.010, memory: 12436, decode.loss_seg: 8.8478, decode.acc_seg: 3.0462, loss: 8.8478
2023-07-14 10:33:46,805 - mmseg - INFO - Iter [250/160000]	lr: 4.972e-06, eta: 1 day, 9:46:05, time: 0.753, data_time: 0.010, memory: 12436, decode.loss_seg: 7.4166, decode.acc_seg: 7.0976, loss: 7.4166
2023-07-14 10:34:24,509 - mmseg - INFO - Iter [300/160000]	lr: 5.969e-06, eta: 1 day, 9:42:12, time: 0.754, data_time: 0.010, memory: 12436, decode.loss_seg: 6.7667, decode.acc_seg: 14.3694, loss: 6.7667
2023-07-14 10:35:01,802 - mmseg - INFO - Iter [350/160000]	lr: 6.965e-06, eta: 1 day, 9:36:25, time: 0.746, data_time: 0.011, memory: 12436, decode.loss_seg: 5.6189, decode.acc_seg: 17.8572, loss: 5.6189
2023-07-14 10:35:39,202 - mmseg - INFO - Iter [400/160000]	lr: 7.960e-06, eta: 1 day, 9:32:32, time: 0.748, data_time: 0.010, memory: 12436, decode.loss_seg: 5.1719, decode.acc_seg: 20.7274, loss: 5.1719
2023-07-14 10:36:16,390 - mmseg - INFO - Iter [450/160000]	lr: 8.955e-06, eta: 1 day, 9:27:58, time: 0.743, data_time: 0.011, memory: 12436, decode.loss_seg: 4.7445, decode.acc_seg: 20.1709, loss: 4.7445
2023-07-14 10:36:53,539 - mmseg - INFO - Iter [500/160000]	lr: 9.949e-06, eta: 1 day, 9:24:14, time: 0.743, data_time: 0.011, memory: 12436, decode.loss_seg: 4.4967, decode.acc_seg: 22.3633, loss: 4.4967
2023-07-14 10:37:30,846 - mmseg - INFO - Iter [550/160000]	lr: 1.094e-05, eta: 1 day, 9:21:40, time: 0.746, data_time: 0.011, memory: 12436, decode.loss_seg: 4.0925, decode.acc_seg: 25.1457, loss: 4.0925
2023-07-14 10:38:07,738 - mmseg - INFO - Iter [600/160000]	lr: 1.194e-05, eta: 1 day, 9:17:39, time: 0.738, data_time: 0.011, memory: 12436, decode.loss_seg: 4.0409, decode.acc_seg: 26.0585, loss: 4.0409
2023-07-14 10:38:44,713 - mmseg - INFO - Iter [650/160000]	lr: 1.293e-05, eta: 1 day, 9:14:30, time: 0.740, data_time: 0.011, memory: 12436, decode.loss_seg: 3.9959, decode.acc_seg: 26.9509, loss: 3.9959
2023-07-14 10:39:21,894 - mmseg - INFO - Iter [700/160000]	lr: 1.392e-05, eta: 1 day, 9:12:22, time: 0.743, data_time: 0.010, memory: 12436, decode.loss_seg: 3.7130, decode.acc_seg: 28.3410, loss: 3.7130
2023-07-14 10:39:59,120 - mmseg - INFO - Iter [750/160000]	lr: 1.491e-05, eta: 1 day, 9:10:42, time: 0.744, data_time: 0.012, memory: 12436, decode.loss_seg: 3.5195, decode.acc_seg: 29.9060, loss: 3.5195
2023-07-14 10:40:36,554 - mmseg - INFO - Iter [800/160000]	lr: 1.590e-05, eta: 1 day, 9:09:56, time: 0.749, data_time: 0.011, memory: 12436, decode.loss_seg: 3.2287, decode.acc_seg: 32.3498, loss: 3.2287
2023-07-14 10:41:13,743 - mmseg - INFO - Iter [850/160000]	lr: 1.689e-05, eta: 1 day, 9:08:21, time: 0.744, data_time: 0.011, memory: 12436, decode.loss_seg: 3.2135, decode.acc_seg: 32.4031, loss: 3.2135
2023-07-14 10:41:51,031 - mmseg - INFO - Iter [900/160000]	lr: 1.788e-05, eta: 1 day, 9:07:08, time: 0.746, data_time: 0.010, memory: 12436, decode.loss_seg: 3.2274, decode.acc_seg: 33.3787, loss: 3.2274
2023-07-14 10:42:28,405 - mmseg - INFO - Iter [950/160000]	lr: 1.887e-05, eta: 1 day, 9:06:15, time: 0.748, data_time: 0.011, memory: 12436, decode.loss_seg: 2.9840, decode.acc_seg: 36.4814, loss: 2.9840
2023-07-14 10:43:05,802 - mmseg - INFO - Exp name: mrcfa.b2.480x480.vspw2_hypercorr.160k.py
2023-07-14 10:43:05,803 - mmseg - INFO - Iter [1000/160000]	lr: 1.986e-05, eta: 1 day, 9:05:20, time: 0.747, data_time: 0.011, memory: 12436, decode.loss_seg: 3.0188, decode.acc_seg: 34.4197, loss: 3.0188
2023-07-14 10:43:42,894 - mmseg - INFO - Iter [1050/160000]	lr: 2.084e-05, eta: 1 day, 9:03:53, time: 0.743, data_time: 0.011, memory: 12436, decode.loss_seg: 2.9995, decode.acc_seg: 35.6591, loss: 2.9995
2023-07-14 10:44:19,947 - mmseg - INFO - Iter [1100/160000]	lr: 2.183e-05, eta: 1 day, 9:02:20, time: 0.741, data_time: 0.011, memory: 12436, decode.loss_seg: 2.6984, decode.acc_seg: 36.1008, loss: 2.6984
2023-07-14 10:44:59,103 - mmseg - INFO - Iter [1150/160000]	lr: 2.281e-05, eta: 1 day, 9:05:41, time: 0.783, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 26.4677, loss: nan
2023-07-14 10:45:41,660 - mmseg - INFO - Iter [1200/160000]	lr: 2.380e-05, eta: 1 day, 9:16:08, time: 0.851, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.2815, loss: nan
2023-07-14 10:46:24,144 - mmseg - INFO - Iter [1250/160000]	lr: 2.479e-05, eta: 1 day, 9:25:40, time: 0.850, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 9.0201, loss: nan
2023-07-14 10:47:06,656 - mmseg - INFO - Iter [1300/160000]	lr: 2.577e-05, eta: 1 day, 9:34:24, time: 0.850, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.7191, loss: nan
2023-07-14 10:47:49,217 - mmseg - INFO - Iter [1350/160000]	lr: 2.675e-05, eta: 1 day, 9:42:33, time: 0.851, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 5.8021, loss: nan
2023-07-14 10:48:31,724 - mmseg - INFO - Iter [1400/160000]	lr: 2.774e-05, eta: 1 day, 9:49:58, time: 0.850, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 5.2404, loss: nan
2023-07-14 10:49:14,096 - mmseg - INFO - Iter [1450/160000]	lr: 2.872e-05, eta: 1 day, 9:56:33, time: 0.847, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 5.3298, loss: nan
2023-07-14 10:49:56,558 - mmseg - INFO - Iter [1500/160000]	lr: 2.970e-05, eta: 1 day, 10:02:50, time: 0.849, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.2587, loss: nan
2023-07-14 10:50:39,225 - mmseg - INFO - Iter [1550/160000]	lr: 2.971e-05, eta: 1 day, 10:09:01, time: 0.853, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.6319, loss: nan
2023-07-14 10:51:21,619 - mmseg - INFO - Iter [1600/160000]	lr: 2.970e-05, eta: 1 day, 10:14:19, time: 0.848, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.3778, loss: nan
2023-07-14 10:52:04,232 - mmseg - INFO - Iter [1650/160000]	lr: 2.969e-05, eta: 1 day, 10:19:35, time: 0.852, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5646, loss: nan
2023-07-14 10:52:47,048 - mmseg - INFO - Iter [1700/160000]	lr: 2.968e-05, eta: 1 day, 10:24:49, time: 0.856, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.1744, loss: nan
2023-07-14 10:53:29,291 - mmseg - INFO - Iter [1750/160000]	lr: 2.967e-05, eta: 1 day, 10:28:52, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.7843, loss: nan
2023-07-14 10:54:12,096 - mmseg - INFO - Iter [1800/160000]	lr: 2.966e-05, eta: 1 day, 10:33:28, time: 0.856, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.2556, loss: nan
2023-07-14 10:54:54,287 - mmseg - INFO - Iter [1850/160000]	lr: 2.965e-05, eta: 1 day, 10:36:54, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.4950, loss: nan
2023-07-14 10:55:36,826 - mmseg - INFO - Iter [1900/160000]	lr: 2.964e-05, eta: 1 day, 10:40:35, time: 0.851, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.2839, loss: nan
2023-07-14 10:56:19,569 - mmseg - INFO - Iter [1950/160000]	lr: 2.963e-05, eta: 1 day, 10:44:20, time: 0.855, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.1678, loss: nan
2023-07-14 10:57:01,822 - mmseg - INFO - Exp name: mrcfa.b2.480x480.vspw2_hypercorr.160k.py
2023-07-14 10:57:01,822 - mmseg - INFO - Iter [2000/160000]	lr: 2.963e-05, eta: 1 day, 10:47:13, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.3452, loss: nan
2023-07-14 10:57:44,218 - mmseg - INFO - Iter [2050/160000]	lr: 2.962e-05, eta: 1 day, 10:50:06, time: 0.848, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.4429, loss: nan
2023-07-14 10:58:26,601 - mmseg - INFO - Iter [2100/160000]	lr: 2.961e-05, eta: 1 day, 10:52:48, time: 0.847, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.2741, loss: nan
2023-07-14 10:59:09,266 - mmseg - INFO - Iter [2150/160000]	lr: 2.960e-05, eta: 1 day, 10:55:42, time: 0.854, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5634, loss: nan
2023-07-14 10:59:51,735 - mmseg - INFO - Iter [2200/160000]	lr: 2.959e-05, eta: 1 day, 10:58:11, time: 0.849, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.4355, loss: nan
2023-07-14 11:00:33,939 - mmseg - INFO - Iter [2250/160000]	lr: 2.958e-05, eta: 1 day, 11:00:14, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5083, loss: nan
2023-07-14 11:01:16,356 - mmseg - INFO - Iter [2300/160000]	lr: 2.957e-05, eta: 1 day, 11:02:23, time: 0.848, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.2998, loss: nan
2023-07-14 11:01:58,876 - mmseg - INFO - Iter [2350/160000]	lr: 2.956e-05, eta: 1 day, 11:04:33, time: 0.851, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.8853, loss: nan
2023-07-14 11:02:41,346 - mmseg - INFO - Iter [2400/160000]	lr: 2.955e-05, eta: 1 day, 11:06:31, time: 0.849, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.2525, loss: nan
2023-07-14 11:03:23,927 - mmseg - INFO - Iter [2450/160000]	lr: 2.954e-05, eta: 1 day, 11:08:30, time: 0.851, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 5.3726, loss: nan
2023-07-14 11:04:06,273 - mmseg - INFO - Iter [2500/160000]	lr: 2.953e-05, eta: 1 day, 11:10:09, time: 0.847, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 11.4103, loss: nan
2023-07-14 11:04:48,714 - mmseg - INFO - Iter [2550/160000]	lr: 2.952e-05, eta: 1 day, 11:11:48, time: 0.849, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.2375, loss: nan
2023-07-14 11:05:31,104 - mmseg - INFO - Iter [2600/160000]	lr: 2.951e-05, eta: 1 day, 11:13:17, time: 0.847, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 4.5070, loss: nan
2023-07-14 11:06:13,819 - mmseg - INFO - Iter [2650/160000]	lr: 2.950e-05, eta: 1 day, 11:15:01, time: 0.854, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.4039, loss: nan
2023-07-14 11:06:55,823 - mmseg - INFO - Iter [2700/160000]	lr: 2.949e-05, eta: 1 day, 11:16:00, time: 0.841, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.4591, loss: nan
2023-07-14 11:07:38,180 - mmseg - INFO - Iter [2750/160000]	lr: 2.948e-05, eta: 1 day, 11:17:14, time: 0.847, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.3325, loss: nan
2023-07-14 11:08:20,456 - mmseg - INFO - Iter [2800/160000]	lr: 2.948e-05, eta: 1 day, 11:18:19, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 9.2785, loss: nan
2023-07-14 11:09:02,527 - mmseg - INFO - Iter [2850/160000]	lr: 2.947e-05, eta: 1 day, 11:19:10, time: 0.842, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.2146, loss: nan
2023-07-14 11:09:44,892 - mmseg - INFO - Iter [2900/160000]	lr: 2.946e-05, eta: 1 day, 11:20:13, time: 0.847, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.9822, loss: nan
2023-07-14 11:10:27,068 - mmseg - INFO - Iter [2950/160000]	lr: 2.945e-05, eta: 1 day, 11:21:02, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.6604, loss: nan
2023-07-14 11:11:09,400 - mmseg - INFO - Exp name: mrcfa.b2.480x480.vspw2_hypercorr.160k.py
2023-07-14 11:11:09,400 - mmseg - INFO - Iter [3000/160000]	lr: 2.944e-05, eta: 1 day, 11:21:56, time: 0.847, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.3775, loss: nan
2023-07-14 11:11:51,611 - mmseg - INFO - Iter [3050/160000]	lr: 2.943e-05, eta: 1 day, 11:22:41, time: 0.844, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.0626, loss: nan
2023-07-14 11:12:33,873 - mmseg - INFO - Iter [3100/160000]	lr: 2.942e-05, eta: 1 day, 11:23:26, time: 0.845, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.5466, loss: nan
2023-07-14 11:13:16,164 - mmseg - INFO - Iter [3150/160000]	lr: 2.941e-05, eta: 1 day, 11:24:09, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.6281, loss: nan
2023-07-14 11:13:58,399 - mmseg - INFO - Iter [3200/160000]	lr: 2.940e-05, eta: 1 day, 11:24:47, time: 0.845, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.9277, loss: nan
2023-07-14 11:14:40,407 - mmseg - INFO - Iter [3250/160000]	lr: 2.939e-05, eta: 1 day, 11:25:12, time: 0.841, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 5.2537, loss: nan
2023-07-14 11:15:22,468 - mmseg - INFO - Iter [3300/160000]	lr: 2.938e-05, eta: 1 day, 11:25:37, time: 0.841, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.1081, loss: nan
2023-07-14 11:16:04,622 - mmseg - INFO - Iter [3350/160000]	lr: 2.937e-05, eta: 1 day, 11:26:05, time: 0.843, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.9365, loss: nan
2023-07-14 11:16:46,641 - mmseg - INFO - Iter [3400/160000]	lr: 2.936e-05, eta: 1 day, 11:26:24, time: 0.840, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.7088, loss: nan
2023-07-14 11:17:28,910 - mmseg - INFO - Iter [3450/160000]	lr: 2.935e-05, eta: 1 day, 11:26:53, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.0517, loss: nan
2023-07-14 11:18:10,698 - mmseg - INFO - Iter [3500/160000]	lr: 2.934e-05, eta: 1 day, 11:26:58, time: 0.836, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.7328, loss: nan
2023-07-14 11:18:52,966 - mmseg - INFO - Iter [3550/160000]	lr: 2.933e-05, eta: 1 day, 11:27:24, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 4.7638, loss: nan
2023-07-14 11:19:35,024 - mmseg - INFO - Iter [3600/160000]	lr: 2.933e-05, eta: 1 day, 11:27:37, time: 0.841, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.7354, loss: nan
2023-07-14 11:20:17,114 - mmseg - INFO - Iter [3650/160000]	lr: 2.932e-05, eta: 1 day, 11:27:52, time: 0.842, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5970, loss: nan
2023-07-14 11:20:59,288 - mmseg - INFO - Iter [3700/160000]	lr: 2.931e-05, eta: 1 day, 11:28:06, time: 0.843, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.8315, loss: nan
2023-07-14 11:21:41,305 - mmseg - INFO - Iter [3750/160000]	lr: 2.930e-05, eta: 1 day, 11:28:16, time: 0.841, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.2783, loss: nan
2023-07-14 11:22:23,405 - mmseg - INFO - Iter [3800/160000]	lr: 2.929e-05, eta: 1 day, 11:28:26, time: 0.842, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.7421, loss: nan
2023-07-14 11:23:05,629 - mmseg - INFO - Iter [3850/160000]	lr: 2.928e-05, eta: 1 day, 11:28:38, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.3755, loss: nan
2023-07-14 11:23:47,478 - mmseg - INFO - Iter [3900/160000]	lr: 2.927e-05, eta: 1 day, 11:28:36, time: 0.837, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.4320, loss: nan
2023-07-14 11:24:29,380 - mmseg - INFO - Iter [3950/160000]	lr: 2.926e-05, eta: 1 day, 11:28:35, time: 0.838, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.3438, loss: nan
2023-07-14 11:25:11,854 - mmseg - INFO - Saving checkpoint at 4000 iterations
2023-07-14 11:25:12,640 - mmseg - INFO - Exp name: mrcfa.b2.480x480.vspw2_hypercorr.160k.py
2023-07-14 11:25:12,640 - mmseg - INFO - Iter [4000/160000]	lr: 2.925e-05, eta: 1 day, 11:29:25, time: 0.865, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.0712, loss: nan
2023-07-14 11:25:54,780 - mmseg - INFO - Iter [4050/160000]	lr: 2.924e-05, eta: 1 day, 11:29:29, time: 0.842, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.6401, loss: nan
2023-07-14 11:26:36,593 - mmseg - INFO - Iter [4100/160000]	lr: 2.923e-05, eta: 1 day, 11:29:21, time: 0.836, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.0881, loss: nan
2023-07-14 11:27:18,774 - mmseg - INFO - Iter [4150/160000]	lr: 2.922e-05, eta: 1 day, 11:29:25, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5020, loss: nan
2023-07-14 11:28:01,246 - mmseg - INFO - Iter [4200/160000]	lr: 2.921e-05, eta: 1 day, 11:29:39, time: 0.849, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 10.0961, loss: nan
2023-07-14 11:28:43,578 - mmseg - INFO - Iter [4250/160000]	lr: 2.920e-05, eta: 1 day, 11:29:46, time: 0.846, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.3346, loss: nan
2023-07-14 11:29:25,960 - mmseg - INFO - Iter [4300/160000]	lr: 2.919e-05, eta: 1 day, 11:29:55, time: 0.848, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.1540, loss: nan
2023-07-14 11:30:07,992 - mmseg - INFO - Iter [4350/160000]	lr: 2.918e-05, eta: 1 day, 11:29:49, time: 0.841, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5968, loss: nan
2023-07-14 11:30:50,208 - mmseg - INFO - Iter [4400/160000]	lr: 2.918e-05, eta: 1 day, 11:29:50, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.0428, loss: nan
2023-07-14 11:31:32,609 - mmseg - INFO - Iter [4450/160000]	lr: 2.917e-05, eta: 1 day, 11:29:54, time: 0.847, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.1637, loss: nan
2023-07-14 11:32:14,935 - mmseg - INFO - Iter [4500/160000]	lr: 2.916e-05, eta: 1 day, 11:29:57, time: 0.847, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5139, loss: nan
2023-07-14 11:32:57,213 - mmseg - INFO - Iter [4550/160000]	lr: 2.915e-05, eta: 1 day, 11:29:57, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 9.8138, loss: nan
2023-07-14 11:33:39,256 - mmseg - INFO - Iter [4600/160000]	lr: 2.914e-05, eta: 1 day, 11:29:47, time: 0.841, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.4991, loss: nan
2023-07-14 11:34:21,417 - mmseg - INFO - Iter [4650/160000]	lr: 2.913e-05, eta: 1 day, 11:29:41, time: 0.843, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 9.8359, loss: nan
2023-07-14 11:35:03,645 - mmseg - INFO - Iter [4700/160000]	lr: 2.912e-05, eta: 1 day, 11:29:36, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.6153, loss: nan
2023-07-14 11:35:45,787 - mmseg - INFO - Iter [4750/160000]	lr: 2.911e-05, eta: 1 day, 11:29:28, time: 0.843, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.9268, loss: nan
2023-07-14 11:36:27,871 - mmseg - INFO - Iter [4800/160000]	lr: 2.910e-05, eta: 1 day, 11:29:17, time: 0.842, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.8580, loss: nan
2023-07-14 11:37:10,116 - mmseg - INFO - Iter [4850/160000]	lr: 2.909e-05, eta: 1 day, 11:29:10, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5299, loss: nan
2023-07-14 11:37:52,301 - mmseg - INFO - Iter [4900/160000]	lr: 2.908e-05, eta: 1 day, 11:29:01, time: 0.844, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.6193, loss: nan
2023-07-14 11:38:34,525 - mmseg - INFO - Iter [4950/160000]	lr: 2.907e-05, eta: 1 day, 11:28:53, time: 0.845, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.3825, loss: nan
2023-07-14 11:39:16,840 - mmseg - INFO - Exp name: mrcfa.b2.480x480.vspw2_hypercorr.160k.py
2023-07-14 11:39:16,840 - mmseg - INFO - Iter [5000/160000]	lr: 2.906e-05, eta: 1 day, 11:28:46, time: 0.846, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.9059, loss: nan
2023-07-14 11:39:59,154 - mmseg - INFO - Iter [5050/160000]	lr: 2.905e-05, eta: 1 day, 11:28:39, time: 0.846, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 5.8638, loss: nan
2023-07-14 11:40:41,043 - mmseg - INFO - Iter [5100/160000]	lr: 2.904e-05, eta: 1 day, 11:28:19, time: 0.838, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.5649, loss: nan
2023-07-14 11:41:23,425 - mmseg - INFO - Iter [5150/160000]	lr: 2.903e-05, eta: 1 day, 11:28:12, time: 0.848, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.8987, loss: nan
2023-07-14 11:42:05,430 - mmseg - INFO - Iter [5200/160000]	lr: 2.903e-05, eta: 1 day, 11:27:54, time: 0.840, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.6712, loss: nan
2023-07-14 11:42:47,689 - mmseg - INFO - Iter [5250/160000]	lr: 2.902e-05, eta: 1 day, 11:27:43, time: 0.846, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5625, loss: nan
2023-07-14 11:43:29,825 - mmseg - INFO - Iter [5300/160000]	lr: 2.901e-05, eta: 1 day, 11:27:27, time: 0.842, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.7471, loss: nan
2023-07-14 11:44:11,977 - mmseg - INFO - Iter [5350/160000]	lr: 2.900e-05, eta: 1 day, 11:27:12, time: 0.844, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.8062, loss: nan
2023-07-14 11:44:54,134 - mmseg - INFO - Iter [5400/160000]	lr: 2.899e-05, eta: 1 day, 11:26:56, time: 0.843, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.4672, loss: nan
2023-07-14 11:45:36,305 - mmseg - INFO - Iter [5450/160000]	lr: 2.898e-05, eta: 1 day, 11:26:41, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5337, loss: nan
2023-07-14 11:46:18,584 - mmseg - INFO - Iter [5500/160000]	lr: 2.897e-05, eta: 1 day, 11:26:27, time: 0.845, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.5401, loss: nan
2023-07-14 11:47:01,067 - mmseg - INFO - Iter [5550/160000]	lr: 2.896e-05, eta: 1 day, 11:26:19, time: 0.850, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.4753, loss: nan
2023-07-14 11:47:43,099 - mmseg - INFO - Iter [5600/160000]	lr: 2.895e-05, eta: 1 day, 11:25:58, time: 0.841, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.5837, loss: nan
2023-07-14 11:48:25,299 - mmseg - INFO - Iter [5650/160000]	lr: 2.894e-05, eta: 1 day, 11:25:41, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 9.6152, loss: nan
2023-07-14 11:49:07,469 - mmseg - INFO - Iter [5700/160000]	lr: 2.893e-05, eta: 1 day, 11:25:23, time: 0.843, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.0927, loss: nan
2023-07-14 11:49:49,485 - mmseg - INFO - Iter [5750/160000]	lr: 2.892e-05, eta: 1 day, 11:25:00, time: 0.840, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.1563, loss: nan
2023-07-14 11:50:31,632 - mmseg - INFO - Iter [5800/160000]	lr: 2.891e-05, eta: 1 day, 11:24:41, time: 0.843, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.3761, loss: nan
2023-07-14 11:51:13,655 - mmseg - INFO - Iter [5850/160000]	lr: 2.890e-05, eta: 1 day, 11:24:17, time: 0.840, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.0272, loss: nan
2023-07-14 11:51:56,112 - mmseg - INFO - Iter [5900/160000]	lr: 2.889e-05, eta: 1 day, 11:24:05, time: 0.849, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.5717, loss: nan
2023-07-14 11:52:38,203 - mmseg - INFO - Iter [5950/160000]	lr: 2.888e-05, eta: 1 day, 11:23:43, time: 0.842, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.8963, loss: nan
2023-07-14 11:53:20,381 - mmseg - INFO - Exp name: mrcfa.b2.480x480.vspw2_hypercorr.160k.py
2023-07-14 11:53:20,381 - mmseg - INFO - Iter [6000/160000]	lr: 2.888e-05, eta: 1 day, 11:23:22, time: 0.843, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.3601, loss: nan
2023-07-14 11:54:02,544 - mmseg - INFO - Iter [6050/160000]	lr: 2.887e-05, eta: 1 day, 11:23:02, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.8777, loss: nan
2023-07-14 11:54:44,768 - mmseg - INFO - Iter [6100/160000]	lr: 2.886e-05, eta: 1 day, 11:22:42, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.1457, loss: nan
2023-07-14 11:55:26,981 - mmseg - INFO - Iter [6150/160000]	lr: 2.885e-05, eta: 1 day, 11:22:21, time: 0.844, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.9337, loss: nan
2023-07-14 11:56:08,965 - mmseg - INFO - Iter [6200/160000]	lr: 2.884e-05, eta: 1 day, 11:21:55, time: 0.840, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.8659, loss: nan
2023-07-14 11:56:51,025 - mmseg - INFO - Iter [6250/160000]	lr: 2.883e-05, eta: 1 day, 11:21:30, time: 0.841, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5725, loss: nan
2023-07-14 11:57:33,094 - mmseg - INFO - Iter [6300/160000]	lr: 2.882e-05, eta: 1 day, 11:21:04, time: 0.841, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.4393, loss: nan
2023-07-14 11:58:15,246 - mmseg - INFO - Iter [6350/160000]	lr: 2.881e-05, eta: 1 day, 11:20:41, time: 0.843, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.9814, loss: nan
2023-07-14 11:58:57,591 - mmseg - INFO - Iter [6400/160000]	lr: 2.880e-05, eta: 1 day, 11:20:23, time: 0.847, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.8050, loss: nan
2023-07-14 11:59:40,052 - mmseg - INFO - Iter [6450/160000]	lr: 2.879e-05, eta: 1 day, 11:20:06, time: 0.849, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.6550, loss: nan
2023-07-14 12:00:22,264 - mmseg - INFO - Iter [6500/160000]	lr: 2.878e-05, eta: 1 day, 11:19:43, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.4868, loss: nan
2023-07-14 12:01:04,373 - mmseg - INFO - Iter [6550/160000]	lr: 2.877e-05, eta: 1 day, 11:19:18, time: 0.843, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.5869, loss: nan
2023-07-14 12:01:46,580 - mmseg - INFO - Iter [6600/160000]	lr: 2.876e-05, eta: 1 day, 11:18:54, time: 0.844, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.9553, loss: nan
2023-07-14 12:02:28,777 - mmseg - INFO - Iter [6650/160000]	lr: 2.875e-05, eta: 1 day, 11:18:30, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.2270, loss: nan
2023-07-14 12:03:10,938 - mmseg - INFO - Iter [6700/160000]	lr: 2.874e-05, eta: 1 day, 11:18:05, time: 0.843, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.4769, loss: nan
2023-07-14 12:03:53,506 - mmseg - INFO - Iter [6750/160000]	lr: 2.873e-05, eta: 1 day, 11:17:49, time: 0.851, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.0356, loss: nan
2023-07-14 12:04:35,737 - mmseg - INFO - Iter [6800/160000]	lr: 2.873e-05, eta: 1 day, 11:17:25, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.2140, loss: nan
2023-07-14 12:05:17,663 - mmseg - INFO - Iter [6850/160000]	lr: 2.872e-05, eta: 1 day, 11:16:54, time: 0.839, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.2547, loss: nan
2023-07-14 12:05:59,753 - mmseg - INFO - Iter [6900/160000]	lr: 2.871e-05, eta: 1 day, 11:16:26, time: 0.842, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5156, loss: nan
2023-07-14 12:06:42,075 - mmseg - INFO - Iter [6950/160000]	lr: 2.870e-05, eta: 1 day, 11:16:04, time: 0.846, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.5664, loss: nan
2023-07-14 12:07:24,276 - mmseg - INFO - Exp name: mrcfa.b2.480x480.vspw2_hypercorr.160k.py
2023-07-14 12:07:24,277 - mmseg - INFO - Iter [7000/160000]	lr: 2.869e-05, eta: 1 day, 11:15:38, time: 0.844, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.2260, loss: nan
2023-07-14 12:08:06,591 - mmseg - INFO - Iter [7050/160000]	lr: 2.868e-05, eta: 1 day, 11:15:14, time: 0.846, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.4775, loss: nan
2023-07-14 12:08:48,667 - mmseg - INFO - Iter [7100/160000]	lr: 2.867e-05, eta: 1 day, 11:14:46, time: 0.842, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.1064, loss: nan
2023-07-14 12:09:31,133 - mmseg - INFO - Iter [7150/160000]	lr: 2.866e-05, eta: 1 day, 11:14:25, time: 0.849, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.7336, loss: nan
2023-07-14 12:10:13,440 - mmseg - INFO - Iter [7200/160000]	lr: 2.865e-05, eta: 1 day, 11:14:00, time: 0.846, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.7098, loss: nan
2023-07-14 12:10:55,738 - mmseg - INFO - Iter [7250/160000]	lr: 2.864e-05, eta: 1 day, 11:13:36, time: 0.846, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.4048, loss: nan
2023-07-14 12:11:37,944 - mmseg - INFO - Iter [7300/160000]	lr: 2.863e-05, eta: 1 day, 11:13:08, time: 0.843, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.0150, loss: nan
2023-07-14 12:12:20,171 - mmseg - INFO - Iter [7350/160000]	lr: 2.862e-05, eta: 1 day, 11:12:42, time: 0.845, data_time: 0.013, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.4080, loss: nan
2023-07-14 12:13:02,419 - mmseg - INFO - Iter [7400/160000]	lr: 2.861e-05, eta: 1 day, 11:12:15, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.1057, loss: nan
2023-07-14 12:13:44,579 - mmseg - INFO - Iter [7450/160000]	lr: 2.860e-05, eta: 1 day, 11:11:46, time: 0.843, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.4424, loss: nan
2023-07-14 12:14:26,988 - mmseg - INFO - Iter [7500/160000]	lr: 2.859e-05, eta: 1 day, 11:11:23, time: 0.849, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.6210, loss: nan
2023-07-14 12:15:09,278 - mmseg - INFO - Iter [7550/160000]	lr: 2.858e-05, eta: 1 day, 11:10:57, time: 0.846, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.9946, loss: nan
2023-07-14 12:15:51,736 - mmseg - INFO - Iter [7600/160000]	lr: 2.858e-05, eta: 1 day, 11:10:34, time: 0.849, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 9.8340, loss: nan
2023-07-14 12:16:33,984 - mmseg - INFO - Iter [7650/160000]	lr: 2.857e-05, eta: 1 day, 11:10:06, time: 0.845, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.6921, loss: nan
2023-07-14 12:17:16,162 - mmseg - INFO - Iter [7700/160000]	lr: 2.856e-05, eta: 1 day, 11:09:37, time: 0.844, data_time: 0.012, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.2058, loss: nan
2023-07-14 12:17:58,347 - mmseg - INFO - Iter [7750/160000]	lr: 2.855e-05, eta: 1 day, 11:09:08, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.0605, loss: nan
2023-07-14 12:18:40,323 - mmseg - INFO - Iter [7800/160000]	lr: 2.854e-05, eta: 1 day, 11:08:34, time: 0.839, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5851, loss: nan
2023-07-14 12:19:22,603 - mmseg - INFO - Iter [7850/160000]	lr: 2.853e-05, eta: 1 day, 11:08:07, time: 0.846, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5286, loss: nan
2023-07-14 12:20:04,937 - mmseg - INFO - Iter [7900/160000]	lr: 2.852e-05, eta: 1 day, 11:07:40, time: 0.847, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.4953, loss: nan
2023-07-14 12:20:47,113 - mmseg - INFO - Iter [7950/160000]	lr: 2.851e-05, eta: 1 day, 11:07:10, time: 0.844, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 6.7904, loss: nan
2023-07-14 12:21:29,602 - mmseg - INFO - Saving checkpoint at 8000 iterations
2023-07-14 12:21:30,390 - mmseg - INFO - Exp name: mrcfa.b2.480x480.vspw2_hypercorr.160k.py
2023-07-14 12:21:30,390 - mmseg - INFO - Iter [8000/160000]	lr: 2.850e-05, eta: 1 day, 11:07:01, time: 0.866, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.6367, loss: nan
2023-07-14 12:22:12,684 - mmseg - INFO - Iter [8050/160000]	lr: 2.849e-05, eta: 1 day, 11:06:32, time: 0.846, data_time: 0.010, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 8.8882, loss: nan
2023-07-14 12:22:54,949 - mmseg - INFO - Iter [8100/160000]	lr: 2.848e-05, eta: 1 day, 11:06:03, time: 0.845, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.5138, loss: nan
2023-07-14 12:23:37,434 - mmseg - INFO - Iter [8150/160000]	lr: 2.847e-05, eta: 1 day, 11:05:39, time: 0.850, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.4544, loss: nan
2023-07-14 12:24:19,729 - mmseg - INFO - Iter [8200/160000]	lr: 2.846e-05, eta: 1 day, 11:05:10, time: 0.846, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.6852, loss: nan
2023-07-14 12:25:01,777 - mmseg - INFO - Iter [8250/160000]	lr: 2.845e-05, eta: 1 day, 11:04:36, time: 0.841, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 5.0489, loss: nan
2023-07-14 12:25:44,099 - mmseg - INFO - Iter [8300/160000]	lr: 2.844e-05, eta: 1 day, 11:04:07, time: 0.846, data_time: 0.011, memory: 12436, decode.loss_seg: nan, decode.acc_seg: 7.8474, loss: nan
Traceback (most recent call last):
  File "/home/lixinhao/anaconda3/envs/vss/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/lixinhao/anaconda3/envs/vss/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/lixinhao/anaconda3/envs/vss/lib/python3.7/site-packages/torch/distributed/launch.py", line 260, in <module>
    main()
  File "/home/lixinhao/anaconda3/envs/vss/lib/python3.7/site-packages/torch/distributed/launch.py", line 256, in main
    cmd=cmd)
subprocess.CalledProcessError: Command '['/home/lixinhao/anaconda3/envs/vss/bin/python', '-u', './tools/train.py', '--local_rank=3', 'local_configs/mrcfa/B2/mrcfa.b2.480x480.vspw2_hypercorr.160k.py', '--launcher', 'pytorch', '--work-dir', 'model_path/vspw2/model_save/b11']' died with <Signals.SIGKILL: 9>.
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
/home/lixinhao/anaconda3/envs/vss/lib/python3.7/multiprocessing/semaphore_tracker.py:144: UserWarning: semaphore_tracker: There appear to be 20 leaked semaphores to clean up at shutdown
  len(cache))
/home/lixinhao/anaconda3/envs/vss/lib/python3.7/multiprocessing/semaphore_tracker.py:144: UserWarning: semaphore_tracker: There appear to be 20 leaked semaphores to clean up at shutdown
  len(cache))
/home/lixinhao/anaconda3/envs/vss/lib/python3.7/multiprocessing/semaphore_tracker.py:144: UserWarning: semaphore_tracker: There appear to be 20 leaked semaphores to clean up at shutdown
  len(cache))
/home/lixinhao/anaconda3/envs/vss/lib/python3.7/multiprocessing/semaphore_tracker.py:144: UserWarning: semaphore_tracker: There appear to be 20 leaked semaphores to clean up at shutdown
  len(cache))
